#!/usr/bin/env node
'use strict';

let {pipeline} = require('stream')
let path = require('path')
let util = require('util')
let fs = require('fs')

let FeedParser = require('feedparser')
let minimist = require('minimist')
let lockfile = require('lockfile')

let MailStream = require('./index')

let errx = function(is_exit, e) {
    console.error(`${path.basename(process.argv[1])} error:`, e.message)
    if (is_exit) process.exit(1)
}
let log = util.debuglog('rss2mail')
let argv = minimist(process.argv.slice(2), {
    boolean: ['rnews'],
    string: ['f', 'history', 'o']
})
let streams = [process.stdin, new FeedParser(), new MailStream(argv)]
if (!argv.o) streams.push(process.stdout)
let pipe = pipeline(...streams, err => {
    if (err && err.code !== 'EPIPE') {
	errx(false, err)
	log(err)		// NODE_DEBUG=rss2mail
	process.exitCode = 1
    }
})

if (argv.o) {
    pipe.on('data', chunk => {
	let out = fs.createWriteStream(argv.o, {flags: 'a'})
	out.on('error', err => errx(1, err))
	out.cork()
	out.write(chunk)	// to memory

	let lock = argv.o + '.lock'
	lockfile.lock(lock, {wait: 5000}, err => { // do we really need locking?
	    if (err) errx(1, err)
	    out.uncork()	// puts!
	    lockfile.unlock(lock, err => {
		if (err) errx(1, err)
		out.end()	// flush, close
	    })
	})
    })
}
