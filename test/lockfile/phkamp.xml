<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hacker News: phkamp threads</title><link>https://news.ycombinator.com/threads?id=phkamp</link><description>Hacker News RSS</description><docs>https://hnrss.org/</docs><generator>hnrss v2.1.1</generator><lastBuildDate>Wed, 06 Mar 2024 11:44:14 +0000</lastBuildDate><atom:link href="https://hnrss.org/threads?id=phkamp" rel="self" type="application/rss+xml"></atom:link><item><title><![CDATA[New comment by phkamp in "Dave Mills has died"]]></title><description><![CDATA[
<p>Tactical Loran, also known as "Loran-D" was a concept Dave was involved in during the Korea war.  There's a pdf about it somewhere on the web.<p>Remember: This is way before GPS, so pilots could not just look at an instrument and know where their plane was, and many planes, both civil and military would regularly get lost (in the meaning: loose track of where they were).<p>In friendly skies you could have your own Loran-C, but you couldn't expect the enemy to provide that for you, so "tactical" meant that you could rig up a naviation chain where you needed it, in a matter of days.<p>(In the end both USSR and China set up Loran-C chains, some of them operating jointly with the US chains, and today the Rusian "Chayka" and possibly the chinese chains are the only ones left.)<p>So tactical Loran was basically Loran-C transmitters in containers or trucks, and because they would be much weaker than real Loran-C, being both power constrained and having much smaller antenna, they used a 16 pulse code instead of an 8/9 pulse code.<p>Loran-C&D is spread-spectrum transmission, but decades before the theory was fleshed out, but it was well understood that a longer pattern would improve S/N.<p>But Loran-C/D was just one of many DoD radionav systems that project 621B (=GPS) was supposed to kill, and eventually did kill.</p>
]]></description><pubDate>Fri, 19 Jan 2024 19:42:25 +0000</pubDate><link>https://news.ycombinator.com/item?id=39060094</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=39060094</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=39060094</guid></item><item><title><![CDATA[New comment by phkamp in "Dave Mills has died"]]></title><description><![CDATA[
<p>He influenced my career as much as Dennis and Ken did.<p>Our "nanokernel" paper brought NTP into the nanosecond domain and gave FreeBSD "timecounters".<p>But our true shared passion was Loran-C<p>Dave even invented the 16-pulse "tactical Loran-C" during the Vietnam War.<p>I borrowed his ISA card Loran-C receiver (serial #1 & only) and later I built two generations of SDR receivers, and he was so proud when I showed him this dancing pulse received with a cheap ARM chip:<p><a href="https://phk.freebsd.dk/AducLoran/animation2.gif" rel="nofollow">https://phk.freebsd.dk/AducLoran/animation2.gif</a><p>And boy was he pissed when USA shut down Loran-C, he really loved his "loudenboomers"<p>RIP</p>
]]></description><pubDate>Fri, 19 Jan 2024 06:43:29 +0000</pubDate><link>https://news.ycombinator.com/item?id=39052289</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=39052289</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=39052289</guid></item><item><title><![CDATA[New comment by phkamp in "Was BASIC that horrible or better?"]]></title><description><![CDATA[
<p>One often overlooked aspect of BASIC's and COMAL's success was the educational benefit of line numbers.<p>Several teachers who taught BASIC/COMAL in the 1970ies and 1980ies have commented to me, that the line numbers made them much easier to teach than for instance PASCAL.<p>The line numbers enables the teacher to say "Now, look at line 240" which is much more precise and concise than "Look at the statement in the IF inside the WHILE" etc.</p>
]]></description><pubDate>Sat, 23 Dec 2023 18:48:29 +0000</pubDate><link>https://news.ycombinator.com/item?id=38746854</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=38746854</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=38746854</guid></item><item><title><![CDATA[New comment by phkamp in "Windows Protected Print Mode"]]></title><description><![CDATA[
<p>It goes all the way back to Windows 3.11, where printer drivers often directly fiddled the Centronics parallel port themselves.<p>The Centronics port is nominally one-way, but it didn't take long for people to realize you could use it for bidirectional communication, thanks to a self-test feature IBM built into the original PC's parallel port adapter, which everybody copied faithfully.<p>The most famous use was probably "LapLink" which enabled fast file transfer via a special cable.<p>Printers and their matching drivers used the bidirectional communication to provide mode detailed status information than the single "Paper Out" signal.<p>And the rest as they say, is a parade of horribles</p>
]]></description><pubDate>Sun, 17 Dec 2023 10:35:09 +0000</pubDate><link>https://news.ycombinator.com/item?id=38671886</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=38671886</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=38671886</guid></item><item><title><![CDATA[New comment by phkamp in "Let's Write a Malloc (2014)"]]></title><description><![CDATA[
<p>Yes, I am the author of that paper and the "phkmalloc" it describes.</p>
]]></description><pubDate>Sun, 26 Nov 2023 16:12:42 +0000</pubDate><link>https://news.ycombinator.com/item?id=38422673</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=38422673</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=38422673</guid></item><item><title><![CDATA[New comment by phkamp in "Let's Write a Malloc (2014)"]]></title><description><![CDATA[
<p>Yes, by all means, let's implement malloc(3) in a way it should never have been implemented after the VAX/11 architecture, and using much less readable code and worse examples than in the Old Testament ?<p>Hint:  Storing the free-list in the free space means that to free even more memory, you have to page in otherwise unused VM pages.<p>See also:  <a href="https://papers.freebsd.org/1998/phk-malloc/" rel="nofollow noreferrer">https://papers.freebsd.org/1998/phk-malloc/</a></p>
]]></description><pubDate>Sun, 26 Nov 2023 11:16:45 +0000</pubDate><link>https://news.ycombinator.com/item?id=38420776</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=38420776</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=38420776</guid></item><item><title><![CDATA[New comment by phkamp in "The Cathedral and the Bazaar (1999)"]]></title><description><![CDATA[
<p>A counter point:<p><a href="https://queue.acm.org/detail.cfm?id=2349257" rel="nofollow">https://queue.acm.org/detail.cfm?id=2349257</a></p>
]]></description><pubDate>Mon, 15 May 2023 07:20:09 +0000</pubDate><link>https://news.ycombinator.com/item?id=35944771</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=35944771</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=35944771</guid></item><item><title><![CDATA[New comment by phkamp in "Ivrea, industrial city of the 20th century"]]></title><description><![CDATA[
<p>I worked there in the late 1980ies while Olivetti was still going strong and loved the place.<p>The Arduino is from Ivrea, it rose from the ruins of Olivetti, so to speak.</p>
]]></description><pubDate>Sun, 16 Apr 2023 17:39:22 +0000</pubDate><link>https://news.ycombinator.com/item?id=35592325</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=35592325</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=35592325</guid></item><item><title><![CDATA[New comment by phkamp in "GameTales: Cray 6400 (2015)"]]></title><description><![CDATA[
<p>The "Cray" 6400 was really the "Sun Sparcenter 4000".<p>I dont know if Sun paid Cray to get their name on it, but I'm sure Cray did not pick it up because of the fantastic CPU performance.<p>The entire sun4d series had the same fundamental issue: When a CPU missed local cache and fetched across the "X-Bus", instead of returning a single word as fast as possible in a 2-cycle packet, the memory board did four sequential memory accesses and sent a 9-cycle packet.<p>The net effect of this was to turn it into an 8MHz machine, if your program did not fit well in the 1Mbyte CPU-cache.<p>On the plus side, you could stick amazing numbers of S-bus cards into those boxes, for instance if you needed a lot of disks for statistical seek-time reduction.<p>We had five SS1000's as file servers, they had 9 differential SCSI controllers each, with each controller servicing three Seagate 2GB "Elite" drives - a whopping total of 270 GB, mirrored and striped with Veritas.</p>
]]></description><pubDate>Mon, 13 Mar 2023 15:04:38 +0000</pubDate><link>https://news.ycombinator.com/item?id=35136679</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=35136679</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=35136679</guid></item><item><title><![CDATA[New comment by phkamp in "Librarian's Letter to Google Security"]]></title><description><![CDATA[
<p>This is what happens when private for-profit companies through monopoly become public infrastructure with no oversight and no obligations but turning a profit.</p>
]]></description><pubDate>Mon, 01 Aug 2022 12:34:09 +0000</pubDate><link>https://news.ycombinator.com/item?id=32305064</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=32305064</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=32305064</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>You seem to be more interested on proving me wrong, than actually understanding what I am saying:<p>Today SSD's expose a datamodel which makes them look like disks.<p>To implement that datamodel, on a storage substrate which have radically different semantics, they have to implement what is essentially a (log-structured-)filesystem.<p>(I happen know this first hand, because I have worked on both file-systems and FALs.)<p>And that is why I say we have two filesystems stacked on each other.<p>Your limited understanding of filesystems does not change reality.<p>Over & out.</p>
]]></description><pubDate>Sat, 02 Jul 2022 12:17:42 +0000</pubDate><link>https://news.ycombinator.com/item?id=31958415</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31958415</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31958415</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>The TLB is an attempt to mitigate the horrible performance properties of a multi-level page-table-trees.<p>If you do away with the page-table-tree, there is no problem for the TLB to mitigate.</p>
]]></description><pubDate>Sat, 02 Jul 2022 12:10:24 +0000</pubDate><link>https://news.ycombinator.com/item?id=31958364</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31958364</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31958364</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>Sorry, overlooked your question.<p>First, I have not been actively involved in Fastly, apart from telling Artur to "go for it!" :-)<p>With respect to Flash technology I have noted elsewhere in this discussion that today our SSD devices effectively contain a filesystem in order to pretend they are disks, and that stacking two filesystems on top of each other is ... suboptimal.<p>But as I also just noted, flash isn't just flash, some properties are very hard to generalize, so i tend to think that we will have to let the people who decide what to solder onto the PCB provide at least the wear-levelling.<p>If I were to design an OS today, I think I would stick firmly with the good ol' UNIX name-hierarchy model, but I would probably split the filesystem layer horizontally in a common and uniform "naming layer" serviced by per-mount "object stores".<p>If you look at FreeBSD, you will see that UFS/FFS is sorta-split that way, but I would move the cut slightly and think in terms of other primitives which take SSD and networks better into account, but see also: Plan9.<p>The service I would want from a SSD device is simply:<p>A) Write object, tell me it's name when written.<p>B) Read object named $bla<p>C) Forget object named $bla<p>Then I'll build my filesystem on top of that.<p>(The NVME crew seems to be moving in the right direction, but it is my impression that some patents prevent them from DTRT, just like Sun's "Prestoserve" patent held up development.).</p>
]]></description><pubDate>Fri, 01 Jul 2022 19:53:24 +0000</pubDate><link>https://news.ycombinator.com/item?id=31951885</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31951885</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31951885</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>Bad block remapping is just a trivial table lookup, the first disk drives did it with 8-bit microcontrollers.<p>In my experience a good FAL is about as hard to write as a good filesystem.<p>While you can parameterize a lot of things, there are some fundamental properties of the flash cells which make it very hard to write a single FAL which works well with all flash chips.<p>As a matter of principle I do not comment on issues specific to Linux.</p>
]]></description><pubDate>Fri, 01 Jul 2022 19:25:21 +0000</pubDate><link>https://news.ycombinator.com/item?id=31951456</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31951456</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31951456</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>Ping me next time you're in our area, I'll be more than happy to give you a tour!</p>
]]></description><pubDate>Fri, 01 Jul 2022 12:24:04 +0000</pubDate><link>https://news.ycombinator.com/item?id=31945449</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31945449</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31945449</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>On a magnetic disk, the exposed "name" is the physical address, on a SSH device, the data is stored ${somewhere} and the FAL has a (pretty interesting!) datastructure to lookup were that is, when you demand a certain "name".<p>When you write a certain "name", the magnetic disk just overwrites what is already there, at the assigned spot.<p>When you write a certain "name" on a SSD, a new spot gets allocated (This may require reshuffling akin to garbage collect), and the data structure is updated for the new locations ("=$name") and old location ("unused"), and if making the old location unused means that an entire eraseblock becomes free, then erasing that is scheduled, after which it is added to the free pool.<p>But that is only the easy part.  The hard part is "wear levelling", which essentially amounts to erasing all the blocks approximately the same amount of times, because that is what wears out the gate material in the individual cells.<p>Wear levelling involves taking data which the host has not asked for, copying to a different location, in order to empty out the erase-block with the least wear (= erase cycles) so that it can shoulder more of the load.<p>And now comes the truly hideous part:  The FAL has to do this in a way where it's own metadata is part of it's own wear-levelling, this is why most competent FAL's have a basic structure much like a classic Log-structured filesystem.<p>So yes:  We do have two filesystems on top of each other, and exposing a more suited model than "array of equal-sized rewritable sectors" could reduce that.</p>
]]></description><pubDate>Fri, 01 Jul 2022 12:21:53 +0000</pubDate><link>https://news.ycombinator.com/item?id=31945429</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31945429</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31945429</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>Sorry, but you are simply wrong there.  The TLB is just one of many hacks made necessary by the ever-deeper page-table-tree.<p>What the R1000 does is collapse the obj->phys lookup in the DRAM memory cycle, and if we did that today, we wouldn't need any page-tables to begin with, much less TLBs.</p>
]]></description><pubDate>Fri, 01 Jul 2022 12:07:40 +0000</pubDate><link>https://news.ycombinator.com/item?id=31945277</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31945277</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31945277</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>No, that is actually not what the Flash Adaptation Layer does.<p>The FAL's primary job is to make the Flash array look like a disk, despite the fact that individual "sectors" are not individually rewriteable.<p>To do this, the FAL implements which is for all practical purposes a filesystem, where the files are all a single sector long and where the filename is the sector number exposed by the "disk".<p>In other words:  Now we have two filesystems on top of each other, one lying to the other, which does a lot of unnecessary work, because it is being lied to.</p>
]]></description><pubDate>Thu, 30 Jun 2022 16:04:43 +0000</pubDate><link>https://news.ycombinator.com/item?id=31934512</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31934512</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31934512</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>I think that is a false dictomy.<p>CHERI has shown that this kind of fundamental architectural improvements can happen with very little impact to running code.</p>
]]></description><pubDate>Thu, 30 Jun 2022 11:09:53 +0000</pubDate><link>https://news.ycombinator.com/item?id=31930949</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31930949</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31930949</guid></item><item><title><![CDATA[New comment by phkamp in "Linear Address Spaces: Unsafe at any speed"]]></title><description><![CDATA[
<p>That is actually the R1000's raison d'etre:<p>Rational built a truly semantic IDE, and the result of that is that if you change a line of source-code somewhere in a huge complicated project, it will know precisely what the consequences of that change are.<p>Ultimately, this allows it often just recompile that single line.</p>
]]></description><pubDate>Thu, 30 Jun 2022 07:51:23 +0000</pubDate><link>https://news.ycombinator.com/item?id=31929780</link><dc:creator>phkamp</dc:creator><comments>https://news.ycombinator.com/item?id=31929780</comments><guid isPermaLink="false">https://news.ycombinator.com/item?id=31929780</guid></item></channel></rss>